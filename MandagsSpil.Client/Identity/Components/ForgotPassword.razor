@page "/forgot-password"
@using System.ComponentModel.DataAnnotations
@inject IAccountManagement Acct

<PageTitle>Forgot your password?</PageTitle>
<HeaderTitle Title="Forgot your password?" />

<OverlayWithText Text="Connecting..." Visible="_loading"/>

<MudContainer MaxWidth="MaxWidth.Small" Class="pt-4">
    <MudText Typo="Typo.subtitle1">Forgot your password?</MudText>
    <MudText Typo="Typo.subtitle1">Provide your email address and select the <b>Reset password</b> button.</MudText>
    <hr />
    @if (!passwordResetCodeSent)
    {
        <EditForm Model="Input" FormName="forgot-password" OnValidSubmit="OnValidSubmitStep1Async" method="post">
            <DataAnnotationsValidator />

            <MudTextField Label="Email" Variant="Variant.Outlined" @bind-Value="Input.Email" For="@(() => Input.Email)"
                InputType="InputType.Email" />

            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Request
                reset code</MudButton>
        </EditForm>
    }
    else
    {
        <MudAlert Severity="Severity.Success">
            An email has been sent to the mail address. Please check your inbox and follow
            the instructions.
        </MudAlert>
        <MudAlert Severity="Severity.Info">Remember to check your spam folder</MudAlert>
    }
</MudContainer>

@code {
    private bool passwordResetCodeSent;
    private bool _loading = false;

    [SupplyParameterFromForm(FormName = "forgot-password")]
    private InputModel Input { get; set; } = new();


    private async Task OnValidSubmitStep1Async()
    {
        _loading = true;

        passwordResetCodeSent = await Acct.ForgotPasswordAsync(Input.Email);

        _loading = false;
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        [Display(Name = "Email")]
        public string Email { get; set; } = string.Empty;
    }
}