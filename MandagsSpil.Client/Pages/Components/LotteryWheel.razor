@inject IJSRuntime JS

<div>
    <MudStack>
        @foreach (var weapon in Weapons)
        {
           
            <AosWrapper AnimationName="slide-down" Duration="1000">

                <div style="height: 3vh; width: 100%;">
                    @weapon
                </div>

            </AosWrapper>
        }
</MudStack>
    <button @onclick="Spin" disabled="@IsSpinning">
        @(IsSpinning ? "Spinning…" : "Spin")
    </button>
</div>

@code {
    [Parameter] public List<string> Weapons { get; set; } = new();
    [Parameter] public int SelectedIndex { get; set; } = -1;

    string WheelStyle = "";
    bool IsSpinning = false;
    Random rnd = new();

    async Task Spin()
    {
        if (IsSpinning || Weapons.Count == 0) return;
        IsSpinning = true;

        // Pick a random weapon
        SelectedIndex = rnd.Next(Weapons.Count);

        // Calculate rotation to land selected weapon at top (0 deg)
        int anglePerItem = 360 / Weapons.Count;
        int targetAngle = SelectedIndex * anglePerItem;

        // Add extra spins for effect
        int totalRotation = 360 * 5 + (360 - targetAngle);

        WheelStyle = $"transition: transform 2s cubic-bezier(.2,.8,.2,1); " +
        $"transform: rotate({totalRotation}deg);";
        StateHasChanged();

        await Task.Delay(2000);

        // Reset rotation to just the final angle (no transition)
        WheelStyle = $"transition: none; transform: rotate({360 - targetAngle}deg);";
        IsSpinning = false;

        await JS.InvokeVoidAsync("AOS.refresh");

        StateHasChanged();
    }
}

<style>
    .wheel-container {
        position: relative;
        width: 20rem;
        height: 22rem;
        margin: auto;
        text-align: center;
    }

    .weapon-wheel {
        position: relative;
        width: 20rem;
        height: 20rem;
        border-radius: 50%;
        margin: auto;
        transform: rotate(0deg);
        transition: transform 2s ease-out;
    }

    .weapon-slot {
        position: absolute;
        top: 50%;
        left: 50%;
        transform-origin: center;
    }

    .weapon-content {
        background: #222;
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 0.5rem;
        font-weight: bold;
        text-align: center;
    }

    .weapon-content.selected {
        background: gold;
        color: black;
        transform: scale(1.2);
        box-shadow: 0 0 10px gold;
    }
</style>